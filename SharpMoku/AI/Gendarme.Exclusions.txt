#
# This file is used by Gendarme to maintain exclusion items that
# are applied to this project.
#
# Project-level suppressions either have no target or are given
# a specific target and scoped to a namespace, type, member, etc.
#
#
# Alternatively, certain rules will recognise the matching FxCop suppression
# Suppressions can also be made in source where appropriate.
#
# Notes:
#   R = rule name
#   A = Applies to given assembly
#   T = Applies to specified type
#   M = Applies to fully qualified method.
#   # = Comment line
#

# begin extra entries generated from defects
# added on 24/08/2024 17:50:21 by RACHEL-240818/rache

R: Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule
T: SharpMoku.AI.EvaluateV3

R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
M: SharpMoku.AI.EvaluateV3/NumberOfScorePattern SharpMoku.AI.EvaluateV3::ValuePosition(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Boolean)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchBotWinningPosition(SharpMoku.Board.Board,SharpMoku.AI.IEvaluate)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board.Board,SharpMoku.AI.IEvaluate)
M: System.Boolean SharpMoku.AI.EvaluateV3::IsAnyInArrays(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Collections.Generic.List`1<System.Int32>)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForDiagonal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForHorizontal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForVertical(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>> SharpMoku.AI.EvaluateV3::GetListAllDirection(SharpMoku.Board.Board,SharpMoku.Board.Position,SharpMoku.Board.CellValue)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.Board.CellValue,SharpMoku.Board.Position,SharpMoku.Board.Position)
M: System.Int32 SharpMoku.AI.EvaluateV2::GetScore(SharpMoku.Board.Board,System.Boolean,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::GetScore(SharpMoku.Board.Board)
M: System.Int32 SharpMoku.AI.EvaluateV3::Heuristic(SharpMoku.Board.Board)

R: Gendarme.Rules.Correctness.ReviewUselessControlFlowRule
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board.Board,SharpMoku.AI.IEvaluate)
M: System.Int32 SharpMoku.AI.EvaluateV2::CalculateConsecutiveStoneSequenceScore(System.Int32,SharpMoku.AI.EvaluateV2/BlockType,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV3::GetScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

R: Gendarme.Rules.Design.AvoidPropertiesInValueTypesRule
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern
T: SharpMoku.AI.MoveScore

R: Gendarme.Rules.Design.AvoidVisibleNestedTypesRule
T: SharpMoku.AI.EvaluateV2/BlockType
T: SharpMoku.AI.EvaluateV2/StonePattern
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern

R: Gendarme.Rules.Design.ConsiderConvertingMethodToPropertyRule
M: SharpMoku.Board.Position SharpMoku.AI.MoveScore::GetPosition()

R: Gendarme.Rules.Design.Generic.DoNotExposeGenericListsRule
T: SharpMoku.AI.EvaluateV2
T: SharpMoku.AI.EvaluateV3

R: Gendarme.Rules.Exceptions.InstantiateArgumentExceptionCorrectlyRule
M: SharpMoku.Board.Position SharpMoku.AI.Minimax::CalculateNextMove(System.Int32)

R: Gendarme.Rules.Maintainability.AvoidComplexMethodsRule
M: System.Int32 SharpMoku.AI.EvaluateV2::CalculateConsecutiveStoneSequenceScore(System.Int32,SharpMoku.AI.EvaluateV2/BlockType,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV3::GetScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

R: Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule
T: SharpMoku.AI.EvaluateV2

R: Gendarme.Rules.Naming.UseCorrectCasingRule
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::minimaxSearchAlphaBeta(System.Int32,SharpMoku.Board.Board,System.Boolean,System.Double,System.Double)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchBotWinningPosition(SharpMoku.Board.Board,SharpMoku.AI.IEvaluate)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board.Board,SharpMoku.AI.IEvaluate)
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternForBlack()
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternForWhite()

R: Gendarme.Rules.Performance.AvoidLargeStructureRule
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern

R: Gendarme.Rules.Performance.AvoidUninstantiatedInternalClassesRule
T: SharpMoku.AI.EvaluateV1

R: Gendarme.Rules.Performance.AvoidUnusedParametersRule
M: System.Double SharpMoku.AI.EvaluateV3::EvaluateBoardForWhite(SharpMoku.Board.Board,System.Boolean)

R: Gendarme.Rules.Performance.OverrideValueTypeDefaultsRule
T: SharpMoku.AI.EvaluateV2/StonePattern
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern
T: SharpMoku.AI.MoveScore

R: Gendarme.Rules.Performance.PreferLiteralOverInitOnlyFieldsRule
T: SharpMoku.AI.EvaluateV2

R: Gendarme.Rules.Smells.AvoidCodeDuplicatedInSameClassRule
T: SharpMoku.AI.EvaluateV2
T: SharpMoku.AI.Minimax

R: Gendarme.Rules.Smells.AvoidLargeClassesRule
T: SharpMoku.AI.EvaluateV3/ListStonePattern

R: Gendarme.Rules.Smells.AvoidLongMethodsRule
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::minimaxSearchAlphaBeta(System.Int32,SharpMoku.Board.Board,System.Boolean,System.Double,System.Double)
M: SharpMoku.Board.Position SharpMoku.AI.Minimax::CalculateNextMove(System.Int32)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForDiagonal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForHorizontal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForVertical(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.Board.CellValue,SharpMoku.Board.Position,SharpMoku.Board.Position)
M: System.Int32 SharpMoku.AI.EvaluateV3::GetScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

# end extra entries generated from defects

