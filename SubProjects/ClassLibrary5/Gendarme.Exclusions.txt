#
# This file is used by Gendarme to maintain exclusion items that
# are applied to this project.
#
# Project-level suppressions either have no target or are given
# a specific target and scoped to a namespace, type, member, etc.
#
#
# Alternatively, certain rules will recognise the matching FxCop suppression
# Suppressions can also be made in source where appropriate.
#
# Notes:
#   R = rule name
#   A = Applies to given assembly
#   T = Applies to specified type
#   M = Applies to fully qualified method.
#   # = Comment line
#
# begin extra entries generated from defects
# added on 08/01/2024 21:26:31 by DESKTOP-1O03T0G/rache

R: Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule
T: SharpMoku.AI.EvaluateV3

R: Gendarme.Rules.Concurrency.NonConstantStaticFieldsShouldNotBeVisibleRule
T: SharpMoku.AI.EvaluateV3

R: Gendarme.Rules.Concurrency.WriteStaticFieldFromInstanceMethodRule
M: System.Double SharpMoku.AI.EvaluateV3::evaluateBoardForWhite(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Correctness.AvoidFloatingPointEqualityRule
M: System.Double SharpMoku.AI.EvaluateV2::calculateBoardScoreForOpponenet(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
M: SharpMoku.AI.EvaluateV3/NumberofScorePattern SharpMoku.AI.EvaluateV3::valuePosition(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Boolean)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchBotWinningPosition(SharpMoku.Board,SharpMoku.AI.IEvaluate)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board,SharpMoku.AI.IEvaluate)
M: System.Boolean SharpMoku.AI.EvaluateV3::IsAnyInArrays(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Collections.Generic.List`1<System.Int32>)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForDiagonal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForHorizontal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForVertical(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>> SharpMoku.AI.EvaluateV3::GetListAllDirection(SharpMoku.Board,SharpMoku.Position,SharpMoku.Board/CellValue)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.Board/CellValue,SharpMoku.Position,SharpMoku.Position)
M: System.Int32 SharpMoku.AI.EvaluateV2::getScore(SharpMoku.Board,System.Boolean,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::getScore(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)
M: System.Int32 SharpMoku.AI.EvaluateV3::heuristic(SharpMoku.Board)

R: Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule
M: System.Boolean SharpMoku.AI.EvaluateV3::IsAnyInArrays(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Collections.Generic.List`1<System.Int32>)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.Board/CellValue,SharpMoku.Position,SharpMoku.Position)
M: System.Int32 SharpMoku.AI.EvaluateV2::calculateConsecutiveStoneSequenceScore(System.Int32,SharpMoku.AI.EvaluateV2/BlockType,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)
M: System.String SharpMoku.AI.Minimax::GetTab(System.Int32)

R: Gendarme.Rules.Design.AvoidPropertiesInValueTypesRule
T: SharpMoku.AI.MoveScore

R: Gendarme.Rules.Design.AvoidVisibleFieldsRule
T: SharpMoku.AI.EvaluateV2/StonePattern
T: SharpMoku.AI.EvaluateV3
T: SharpMoku.AI.EvaluateV3/ListStonePattern
T: SharpMoku.AI.EvaluateV3/NumberofScorePattern
T: SharpMoku.AI.Minimax
T: SharpMoku.AI.Minimax/miniMaxParameter

R: Gendarme.Rules.Design.AvoidVisibleNestedTypesRule
T: SharpMoku.AI.EvaluateV2/BlockType
T: SharpMoku.AI.EvaluateV2/StonePattern
T: SharpMoku.AI.EvaluateV3/ListStonePattern
T: SharpMoku.AI.EvaluateV3/NumberofScorePattern
T: SharpMoku.AI.Minimax/miniMaxParameter

R: Gendarme.Rules.Design.ConsiderConvertingMethodToPropertyRule
M: SharpMoku.Position SharpMoku.AI.MoveScore::GetPosition()

R: Gendarme.Rules.Design.Generic.DoNotExposeGenericListsRule
T: SharpMoku.AI.EvaluateV2
T: SharpMoku.AI.EvaluateV3
T: SharpMoku.AI.EvaluateV3/ListStonePattern

R: Gendarme.Rules.Exceptions.AvoidThrowingBasicExceptionsRule
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForDiagonal(System.Int32[0...,0...],System.Boolean)

R: Gendarme.Rules.Exceptions.InstantiateArgumentExceptionCorrectlyRule
M: SharpMoku.Position SharpMoku.AI.Minimax::calculateNextMove(System.Int32)

R: Gendarme.Rules.Maintainability.AvoidComplexMethodsRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)

R: Gendarme.Rules.Maintainability.VariableNamesShouldNotMatchFieldNamesRule
T: SharpMoku.AI.EvaluateV2/StonePattern

R: Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule
T: SharpMoku.AI.EvaluateV2
T: SharpMoku.AI.EvaluateV3

R: Gendarme.Rules.Naming.UseCorrectCasingRule
M: SharpMoku.AI.EvaluateV3/NumberofScorePattern SharpMoku.AI.EvaluateV3::valuePosition(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Boolean)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::minimaxSearchAlphaBeta(System.Int32,SharpMoku.Board,System.Boolean,System.Double,System.Double)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchBotWinningPosition(SharpMoku.Board,SharpMoku.AI.IEvaluate)
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board,SharpMoku.AI.IEvaluate)
M: SharpMoku.Position SharpMoku.AI.Minimax::calculateNextMove(System.Int32)
M: System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>> SharpMoku.AI.EvaluateV3/ListStonePattern::convertListValue(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>)
M: System.Double SharpMoku.AI.EvaluateV1::evaluateBoard(SharpMoku.Board,System.Boolean)
M: System.Double SharpMoku.AI.EvaluateV2::calculateBoardScoreForOpponenet(SharpMoku.Board,System.Boolean)
M: System.Double SharpMoku.AI.EvaluateV2::evaluateBoard(SharpMoku.Board,System.Boolean)
M: System.Double SharpMoku.AI.EvaluateV3::evaluateBoard(SharpMoku.Board,System.Boolean)
M: System.Double SharpMoku.AI.EvaluateV3::evaluateBoardForWhite(SharpMoku.Board,System.Boolean)
M: System.Double SharpMoku.AI.IEvaluate::evaluateBoard(SharpMoku.Board,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV1::getScore(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.EvaluateV2::calculateConsecutiveStoneSequenceScore(SharpMoku.AI.EvaluateV2/StonePattern,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::calculateConsecutiveStoneSequenceScore(System.Int32,SharpMoku.AI.EvaluateV2/BlockType,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::getScore(SharpMoku.Board,System.Boolean,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::getScore(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScore(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)
M: System.Int32 SharpMoku.AI.EvaluateV3::heuristic(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.IEvaluate::getScore(SharpMoku.Board)
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternforBlack()
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternforWhite()
P: SharpMoku.Board SharpMoku.AI.Minimax/miniMaxParameter::board()
T: SharpMoku.AI.Minimax/miniMaxParameter

R: Gendarme.Rules.Performance.AvoidUninstantiatedInternalClassesRule
T: SharpMoku.AI.EvaluateV1

R: Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule
M: System.Void SharpMoku.AI.EvaluateV3/NumberofScorePattern::.ctor()
M: System.Void SharpMoku.AI.EvaluateV3/NumberofScorePattern::.ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
M: System.Void SharpMoku.AI.Minimax::.ctor(SharpMoku.Board,SharpMoku.AI.IEvaluate,SharpMoku.ILog)

R: Gendarme.Rules.Performance.AvoidUnsealedUninheritedInternalTypeRule
T: SharpMoku.AI.EvaluateV1

R: Gendarme.Rules.Performance.AvoidUnusedParametersRule
M: System.Double SharpMoku.AI.EvaluateV3::evaluateBoardForWhite(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Performance.OverrideValueTypeDefaultsRule
T: SharpMoku.AI.EvaluateV2/StonePattern
T: SharpMoku.AI.MoveScore

R: Gendarme.Rules.Performance.PreferLiteralOverInitOnlyFieldsRule
T: SharpMoku.AI.EvaluateV2

R: Gendarme.Rules.Smells.AvoidCodeDuplicatedInSameClassRule
T: SharpMoku.AI.EvaluateV2
T: SharpMoku.AI.Minimax

R: Gendarme.Rules.Smells.AvoidLargeClassesRule
T: SharpMoku.AI.EvaluateV3/ListStonePattern
T: SharpMoku.AI.EvaluateV3/NumberofScorePattern

R: Gendarme.Rules.Smells.AvoidLongMethodsRule
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::minimaxSearchAlphaBeta(System.Int32,SharpMoku.Board,System.Boolean,System.Double,System.Double)
M: SharpMoku.Position SharpMoku.AI.Minimax::calculateNextMove(System.Int32)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForDiagonal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForHorizontal(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<SharpMoku.AI.EvaluateV2/StonePattern> SharpMoku.AI.EvaluateV2::GetStonePatternForVertical(System.Int32[0...,0...],System.Boolean)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.Board/CellValue,SharpMoku.Position,SharpMoku.Position)
M: System.Int32 SharpMoku.AI.EvaluateV2::calculateConsecutiveStoneSequenceScore(System.Int32,SharpMoku.AI.EvaluateV2/BlockType,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)

# end extra entries generated from defects

# begin extra entries generated from defects
# added on 08/01/2024 21:39:46 by DESKTOP-1O03T0G/rache

R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
M: System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>> SharpMoku.AI.EvaluateV3::GetListAllDirection(SharpMoku.Board,SharpMoku.Position,SharpMoku.CellValue)
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.CellValue,SharpMoku.Position,SharpMoku.Position)

R: Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.CellValue,SharpMoku.Position,SharpMoku.Position)

R: Gendarme.Rules.Correctness.ReviewUselessControlFlowRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberofScorePattern)

R: Gendarme.Rules.Smells.AvoidLongMethodsRule
M: System.Collections.Generic.List`1<System.Int32> SharpMoku.AI.EvaluateV3::GetCellValueInDirection(System.Int32[0...,0...],SharpMoku.CellValue,SharpMoku.Position,SharpMoku.Position)

# end extra entries generated from defects

# begin extra entries generated from defects
# added on 08/01/2024 21:56:24 by DESKTOP-1O03T0G/rache

R: Gendarme.Rules.Correctness.AvoidFloatingPointEqualityRule
M: System.Double SharpMoku.AI.EvaluateV2::CalculateBoardScoreForOpponent(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
M: SharpMoku.AI.EvaluateV3/NumberOfScorePattern SharpMoku.AI.EvaluateV3::ValuePosition(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>>,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::GetScore(SharpMoku.Board,System.Boolean,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV2::GetScore(SharpMoku.Board)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)
M: System.Int32 SharpMoku.AI.EvaluateV3::Heuristic(SharpMoku.Board)

R: Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

R: Gendarme.Rules.Correctness.ReviewUselessControlFlowRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

R: Gendarme.Rules.Design.AvoidVisibleFieldsRule
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern

R: Gendarme.Rules.Design.AvoidVisibleNestedTypesRule
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern

R: Gendarme.Rules.Maintainability.AvoidComplexMethodsRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

R: Gendarme.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodRule
M: System.Double SharpMoku.AI.EvaluateV3::EvaluateBoard(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Naming.UseCorrectCasingRule
M: System.Double SharpMoku.AI.EvaluateV3::EvaluateBoard(SharpMoku.Board,System.Boolean)
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternForBlack()
P: SharpMoku.AI.EvaluateV3/ListStonePattern SharpMoku.AI.EvaluateV3::listStonePatternForWhite()

R: Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule
M: System.Void SharpMoku.AI.EvaluateV3/NumberOfScorePattern::.ctor()
M: System.Void SharpMoku.AI.EvaluateV3/NumberOfScorePattern::.ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)

R: Gendarme.Rules.Performance.AvoidUnusedParametersRule
M: System.Double SharpMoku.AI.EvaluateV3::EvaluateBoardForWhite(SharpMoku.Board,System.Boolean)

R: Gendarme.Rules.Smells.AvoidLargeClassesRule
T: SharpMoku.AI.EvaluateV3/NumberOfScorePattern

R: Gendarme.Rules.Smells.AvoidLongMethodsRule
M: System.Int32 SharpMoku.AI.EvaluateV3::getScoreByPattern(SharpMoku.AI.EvaluateV3/NumberOfScorePattern)

# end extra entries generated from defects

# begin extra entries generated from defects
# added on 10/01/2024 11:14:59 by DESKTOP-1O03T0G/rache

R: Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule
M: System.Void SharpMoku.AI.Minimax::.ctor(SharpMoku.Board,SharpMoku.AI.IEvaluate,SharpMoku.Logging.ILog)

# end extra entries generated from defects

# begin extra entries generated from defects
# added on 22/08/2024 17:44:55 by RACHEL-240818/rache

R: Gendarme.Rules.Correctness.ReviewUselessControlFlowRule
M: SharpMoku.AI.MoveScore SharpMoku.AI.Minimax::searchOpponentWinningPosition(SharpMoku.Board,SharpMoku.AI.IEvaluate)

# end extra entries generated from defects

